#!/usr/bin/env python3

import os
import re
from PIL import Image
from datetime import datetime

def clean_text(text):
    """清理品牌和型號用於檔名"""
    return re.sub(r'\s+', '-', text.strip())

def get_exif_data(filepath):
    """取得 EXIF 資料"""
    try:
        with Image.open(filepath) as img:
            return img._getexif() or {}
    except Exception:
        return {}

def format_filename(date, make, model, ext, counter=None):
    """產生新檔名"""
    date_str = date.strftime("%Y%m%d_%H%M%S")
    camera_info = f"{clean_text(make)}-{clean_text(model)}"
    counter_str = f"-{counter:03d}" if counter is not None else ""
    return f"{date_str}{counter_str}-{camera_info}.{ext.upper()}"

def rename_photos():
    """主函式：批次重新命名照片"""
    seen_names = {}
    for filename in os.listdir('.'):
        if not filename.lower().endswith(('.jpg', '.jpeg')):
            continue

        exif = get_exif_data(filename)
        date_str = exif.get(36867)  # DateTimeOriginal
        if not date_str:
            print(f"❌ 跳過：{filename}（無 DateTimeOriginal）")
            continue

        try:
            date = datetime.strptime(date_str, "%Y:%m:%d %H:%M:%S")
        except Exception:
            print(f"⚠️ 格式錯誤：{filename} 的日期 {date_str}")
            continue

        make = exif.get(271, "Unknown")   # Make
        model = exif.get(272, "Camera")   # Model
        ext = os.path.splitext(filename)[1][1:]

        # 檢查是否有重複
        base_name = format_filename(date, make, model, ext)
        count = seen_names.get(base_name, 0)
        new_name = format_filename(date, make, model, ext, count if count > 0 else None)
        seen_names[base_name] = count + 1

        os.rename(filename, new_name)
        print(f"✅ {filename} → {new_name}")

if __name__ == "__main__":
    rename_photos()
